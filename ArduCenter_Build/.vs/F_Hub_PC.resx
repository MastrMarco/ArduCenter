<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="BtnAN_Rainbow.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////////////////////////////8f8g/wB8AH4AOAA8AB
        AAGAQAABgjADAYAAAAGACBABgAgwAYQIEAGCIAEBgQADAcAAA4PAAYAH4APAD/AP4A/8P/Af////////
        //////////////////////////////////8=
</value>
  </data>
</root>